versions pytest-8.0.2, python-3.12.2.final.0
cwd=/Users/x.barbosa/Sources/lab/py/worth
args=('--verbose', '-svvv', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x1038105f0>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x1038105f0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x103b1e660>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103895a30>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
          plugin_name: 4355394640
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1038105f0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/nose.py'>
          plugin_name: nose
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py'>
          plugin_name: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x103b1e660>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103895a30>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x103b0bf50>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x102850b00>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
          plugin_name: 4355394640
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x1038105f0>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/nose.py'>
          plugin_name: nose
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='no' _global_capturing=<MultiCapture out=None err=None in_=None _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py'>
          plugin_name: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x103b1e660>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x103895a30>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x103b0bf50>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x102850b00>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x103b1f620>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x1039a0c50>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x1038105f0>
          start_path: /Users/x.barbosa/Sources/lab/py/worth
          startdir: /Users/x.barbosa/Sources/lab/py/worth
      finish pytest_report_header --> [['rootdir: /Users/x.barbosa/Sources/lab/py/worth', 'configfile: pyproject.toml'], 'cachedir: .pytest_cache', ['using: pytest-8.0.2']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['/Users/x.barbosa/Sources/lab/py/worth'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (PosixPath('/Users/x.barbosa/Sources/lab/py/worth'), []) [collection]
            pytest_collect_directory [hook]
                path: /Users/x.barbosa/Sources/lab/py/worth
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir worth> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Dir worth> [collection]
      pytest_collectstart [hook]
          collector: <Dir worth>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir worth>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.direnv
            path: /Users/x.barbosa/Sources/lab/py/worth/.direnv
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.envrc
            path: /Users/x.barbosa/Sources/lab/py/worth/.envrc
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/.envrc
            path: /Users/x.barbosa/Sources/lab/py/worth/.envrc
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.git
            path: /Users/x.barbosa/Sources/lab/py/worth/.git
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.gitignore
            path: /Users/x.barbosa/Sources/lab/py/worth/.gitignore
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/.gitignore
            path: /Users/x.barbosa/Sources/lab/py/worth/.gitignore
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.mypy_cache
            path: /Users/x.barbosa/Sources/lab/py/worth/.mypy_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/.pytest_cache
            path: /Users/x.barbosa/Sources/lab/py/worth/.pytest_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/README.md
            path: /Users/x.barbosa/Sources/lab/py/worth/README.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/README.md
            path: /Users/x.barbosa/Sources/lab/py/worth/README.md
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/poetry.lock
            path: /Users/x.barbosa/Sources/lab/py/worth/poetry.lock
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/poetry.lock
            path: /Users/x.barbosa/Sources/lab/py/worth/poetry.lock
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/pyproject.toml
            path: /Users/x.barbosa/Sources/lab/py/worth/pyproject.toml
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/pyproject.toml
            path: /Users/x.barbosa/Sources/lab/py/worth/pyproject.toml
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/pytestdebug.log
            path: /Users/x.barbosa/Sources/lab/py/worth/pytestdebug.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/pytestdebug.log
            path: /Users/x.barbosa/Sources/lab/py/worth/pytestdebug.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/src
            path: /Users/x.barbosa/Sources/lab/py/worth/src
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/x.barbosa/Sources/lab/py/worth/src
            parent: <Dir worth>
        finish pytest_collect_directory --> <Dir src> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/tests
            path: /Users/x.barbosa/Sources/lab/py/worth/tests
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/x.barbosa/Sources/lab/py/worth/tests
            parent: <Dir worth>
        finish pytest_collect_directory --> <Dir tests> [hook]
      finish pytest_make_collect_report --> <CollectReport '.' lenresult=2 outcome='passed'> [hook]
    genitems <Dir src> [collection]
      pytest_collectstart [hook]
          collector: <Dir src>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir src>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth
            parent: <Dir src>
        finish pytest_collect_directory --> <Package worth> [hook]
      finish pytest_make_collect_report --> <CollectReport 'src' lenresult=1 outcome='passed'> [hook]
    genitems <Package worth> [collection]
      pytest_collectstart [hook]
          collector: <Package worth>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package worth>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/__init__.py
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/__init__.py
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/py.typed
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/py.typed
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/py.typed
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/py.typed
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/pytest_plugin.py
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/pytest_plugin.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package worth>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/pytest_plugin.py
            path: /Users/x.barbosa/Sources/lab/py/worth/src/worth/pytest_plugin.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'src/worth' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src/worth' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'src' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir tests> [collection]
      pytest_collectstart [hook]
          collector: <Dir tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/tests/.mypy_cache
            path: /Users/x.barbosa/Sources/lab/py/worth/tests/.mypy_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
            path: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
            path: /Users/x.barbosa/Sources/lab/py/worth/tests/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            collection_path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
            path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir tests>
            file_path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
            path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir tests>
              module_path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
              path: /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py
          finish pytest_pycollect_makemodule --> <Module worth_test.py> [hook]
        finish pytest_collect_file --> [<Module worth_test.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=1 outcome='passed'> [hook]
    genitems <Module worth_test.py> [collection]
      pytest_collectstart [hook]
          collector: <Module worth_test.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module worth_test.py>
      find_module called for: worth_test [assertion]
      matched test file '/Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py' [assertion]
      found cached rewritten pyc for /Users/x.barbosa/Sources/lab/py/worth/tests/worth_test.py [assertion]
      find_module called for: worth [assertion]
      early skip of rewriting module: worth.pytest_plugin [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/x.barbosa/.pyenv/versions/3.12.2/lib/python3.12/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: dataclass
            obj: <function dataclass at 0x102a93e20>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: Always
            obj: <class 'worth.Always'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: Never
            obj: <class 'worth.Never'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: Omit
            obj: <class 'worth.Omit'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: Only
            obj: <class 'worth.Only'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: pytest_assertrepr_compare
            obj: <function pytest_assertrepr_compare at 0x103b882c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: test_always
            obj: <function test_always at 0x103b29120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103b1e900>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_always>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: test_never
            obj: <function test_never at 0x103b88040>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103b1e3f0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_never>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: test_omit
            obj: <function test_omit at 0x103b88ae0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103b1e930>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_omit>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: test_only
            obj: <function test_only at 0x103b88b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103b1da30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_only>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: Model
            obj: <class 'worth_test.Model'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module worth_test.py>
            name: test_plugin
            obj: <function test_plugin at 0x103b88c20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x103b1da30>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_plugin>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/worth_test.py' lenresult=5 outcome='passed'> [hook]
    genitems <Function test_always> [collection]
      pytest_itemcollected [hook]
          item: <Function test_always>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_never> [collection]
      pytest_itemcollected [hook]
          item: <Function test_never>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_omit> [collection]
      pytest_itemcollected [hook]
          item: <Function test_omit>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_only> [collection]
      pytest_itemcollected [hook]
          item: <Function test_only>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_plugin> [collection]
      pytest_itemcollected [hook]
          item: <Function test_plugin>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/worth_test.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport '.' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x1038105f0>
          items: [<Function test_always>, <Function test_never>, <Function test_omit>, <Function test_only>, <Function test_plugin>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x1038105f0>
            items: [<Function test_always>, <Function test_never>, <Function test_omit>, <Function test_only>, <Function test_plugin>]
            start_path: /Users/x.barbosa/Sources/lab/py/worth
            startdir: /Users/x.barbosa/Sources/lab/py/worth
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=5>
      pytest_runtest_protocol [hook]
          item: <Function test_always>
          nextitem: <Function test_never>
        pytest_runtest_logstart [hook]
            nodeid: tests/worth_test.py::test_always
            location: ('tests/worth_test.py', 5, 'test_always')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_always>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_always>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_always' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_always' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_always' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_always>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_always>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_always>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_always' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_always' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_always' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_always>
            nextitem: <Function test_never>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_always>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_always' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_always' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_always' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/worth_test.py::test_always
            location: ('tests/worth_test.py', 5, 'test_always')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_never>
          nextitem: <Function test_omit>
        pytest_runtest_logstart [hook]
            nodeid: tests/worth_test.py::test_never
            location: ('tests/worth_test.py', 14, 'test_never')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_never>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_never>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_never' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_never' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_never' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_never>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_never>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_never>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_never' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_never' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_never' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_never>
            nextitem: <Function test_omit>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_never>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_never' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_never' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_never' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/worth_test.py::test_never
            location: ('tests/worth_test.py', 14, 'test_never')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_omit>
          nextitem: <Function test_only>
        pytest_runtest_logstart [hook]
            nodeid: tests/worth_test.py::test_omit
            location: ('tests/worth_test.py', 22, 'test_omit')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_omit>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_omit>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_omit' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_omit' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_omit' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_omit>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_omit>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_omit>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_omit' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_omit' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_omit' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_omit>
            nextitem: <Function test_only>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_omit>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_omit' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_omit' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_omit' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/worth_test.py::test_omit
            location: ('tests/worth_test.py', 22, 'test_omit')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_only>
          nextitem: <Function test_plugin>
        pytest_runtest_logstart [hook]
            nodeid: tests/worth_test.py::test_only
            location: ('tests/worth_test.py', 26, 'test_only')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_only>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_only>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_only' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_only' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_only' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_only>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_only>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_only>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_only' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_only' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_only' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_only>
            nextitem: <Function test_plugin>
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_only>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_only' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_only' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_only' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/worth_test.py::test_only
            location: ('tests/worth_test.py', 26, 'test_only')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_plugin>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/worth_test.py::test_plugin
            location: ('tests/worth_test.py', 36, 'test_plugin')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_plugin>
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_plugin>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_plugin' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_plugin' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_plugin' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_plugin>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_plugin>
            pytest_assertrepr_compare [hook]
                config: <_pytest.config.Config object at 0x1038105f0>
                op: ==
                left: 1
                right: Model(name='foo', email='OTHER')
            finish pytest_assertrepr_compare --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_plugin>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert 1 == Model(name='foo', email='OTHER')\n +  where Model(name='foo', email='OTHER') = Model('foo', 'OTHER')") tblen=36>>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_plugin' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_plugin' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_plugin' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_plugin>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError("assert 1 == Model(name='foo', email='OTHER')\n +  where Model(name='foo', email='OTHER') = Model('foo', 'OTHER')") tblen=36>>
            report: <TestReport 'tests/worth_test.py::test_plugin' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_plugin>
            nextitem: None
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_plugin>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/worth_test.py::test_plugin' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/worth_test.py::test_plugin' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/worth_test.py::test_plugin' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x1038105f0>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/worth_test.py::test_plugin
            location: ('tests/worth_test.py', 36, 'test_plugin')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=1 testscollected=5>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x103b0bf50>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x1038105f0>
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'tests/worth_test.py::test_plugin' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x1038105f0>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x1038105f0>
    finish pytest_unconfigure --> [] [hook]
